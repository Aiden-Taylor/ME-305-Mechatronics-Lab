
Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
    1    1                      ;**************************************************************************************
    2    2                      ;* Blank Project Main [includes LibV2.2]                                              *
    3    3                      ;**************************************************************************************
    4    4                      ;* Summary:                                                                           *
    5    5                      ;*   -                                                                                *
    6    6                      ;*                                                                                    *
    7    7                      ;* Author: YOUR NAME                                                                  *
    8    8                      ;*   Cal Poly University                                                              *
    9    9                      ;*   Spring 2022                                                                      *
   10   10                      ;*                                                                                    *
   11   11                      ;* Revision History:                                                                  *
   12   12                      ;*   -                                                                                *
   13   13                      ;*                                                                                    *
   14   14                      ;* ToDo:                                                                              *
   15   15                      ;*   -                                                                                *
   16   16                      ;**************************************************************************************
   17   17                      
   18   18                      ;/------------------------------------------------------------------------------------\
   19   19                      ;| Include all associated files                                                       |
   20   20                      ;\------------------------------------------------------------------------------------/
   21   21                      ; The following are external files to be included during assembly
   22   22                      
   23   23                      
   24   24                      ;/------------------------------------------------------------------------------------\
   25   25                      ;| External Definitions                                                               |
   26   26                      ;\------------------------------------------------------------------------------------/
   27   27                      ; All labels that are referenced by the linker need an external definition
   28   28                      
   29   29                                    XDEF  main
   30   30                      
   31   31                      ;/------------------------------------------------------------------------------------\
   32   32                      ;| External References                                                                |
   33   33                      ;\------------------------------------------------------------------------------------/
   34   34                      ; All labels from other files must have an external reference
   35   35                      
   36   36                                    XREF  ENABLE_MOTOR, DISABLE_MOTOR
   37   37                                    XREF  STARTUP_MOTOR, UPDATE_MOTOR, CURRENT_MOTOR
   38   38                                    XREF  STARTUP_PWM, STARTUP_ATD0, STARTUP_ATD1
   39   39                                    XREF  OUTDACA, OUTDACB
   40   40                                    XREF  STARTUP_ENCODER, READ_ENCODER
   41   41                                    XREF  INITLCD, SETADDR, GETADDR, CURSOR_ON, CURSOR_OFF, DISP_OFF
   42   42                                    XREF  OUTCHAR, OUTCHAR_AT, OUTSTRING, OUTSTRING_AT
   43   43                                    XREF  INITKEY, LKEY_FLG, GETCHAR
   44   44                                    XREF  LCDTEMPLATE, UPDATELCD_L1, UPDATELCD_L2
   45   45                                    XREF  LVREF_BUF, LVACT_BUF, LERR_BUF,LEFF_BUF, LKP_BUF, LKI_BUF
   46   46                                    XREF  Entry, ISR_KEYPAD
   47   47                                  
   48   48                      ;/------------------------------------------------------------------------------------\
   49   49                      ;| Assembler Equates                                                                  |
   50   50                      ;\------------------------------------------------------------------------------------/
   51   51                      ; Constant values can be equated here
   52   52                      
   53   53                      
   54   54                      
   55   55                      ;/------------------------------------------------------------------------------------\
   56   56                      ;| Variables in RAM                                                                   |
   57   57                      ;\------------------------------------------------------------------------------------/
   58   58                      ; The following variables are located in unpaged ram
   59   59                      
   60   60                      DEFAULT_RAM:  SECTION
   61   61                      
   62   62   000000             COUNT DS.B 1 
   63   63   000001             BUFFER DS.B 5 
   64   64   000006             INPUT DS.B 1 

Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
   65   65                      
   66   66                      ;/------------------------------------------------------------------------------------\
   67   67                      ;|  Main Program Code                                                                 |
   68   68                      ;\------------------------------------------------------------------------------------/
   69   69                      ; Your code goes here
   70   70                      
   71   71                      MyCode:       SECTION
   72   72                      main:   
   73   73                             
   74   74                              
   75   75   000000 16xx xx            jsr INITLCD       ;initialize LCD 
   76   76   000003 8600               ldaa #$00         ;set LCD position to 0
   77   77   000005 CExx xx            ldx #MESSAGE      ;load message into x 
   78   78   000008 16xx xx            jsr OUTSTRING     ;display message 
   79   79   00000B 16xx xx            jsr INITKEY       ;initialize keypad 
   80   80   00000E 16xx xx            jsr CURSOR_ON     ;turn on cursor 
   81   81                             
   82   82                             
   83   83                            ;create loop to load buffer with inputted variables 
   84   84                            
   85   85   000011 79xx xx            clr COUNT 
   86   86   000014 CDxx xx            ldy #BUFFER
   87   87                             
   88   88                       buffer_loop: 
   89   89                       
   90   90   000017 B6xx xx            ldaa COUNT 
   91   91   00001A 8105               cmpa #$05         ;accumulator a - $5    check if input is a number 
   92   92   00001C 272E               beq spin          ;if count is 5 then we are done and exit the loop 
   93   93                             
   94   94                             
   95   95   00001E 16xx xx            jsr GETCHAR       ;load accumulator b with the keypad input 
   96   96   000021 C108               cmpb #$08         ;accumulator b - $08    check if input is a backspace
   97   97   000023 270E               beq backspace 
   98   98                             
   99   99                             
  100  100                             
  101  101   000025 C139               cmpb #$39         ;accumulator b - $39    check if input is a number 
  102  102   000027 2EEE               bgt buffer_loop   ;if input is not a number, go to the top of the loop 
  103  103                             
  104  104   000029 6BEC               stab a, y         ;load the contents of accumulator b into buffer 
  105  105   00002B 16xx xx            jsr OUTCHAR       ;display the input charater on the LCD 
  106  106                             
  107  107   00002E 72xx xx            inc COUNT         ;increment count 
  108  108                                            ;increment x 
  109  109                             
  110  110   000031 20E4               bra buffer_loop    
  111  111                             
  112  112                             
  113  113                       backspace: 
  114  114   000033 16xx xx            jsr GETADDR                   ;get current position of LCR 
  115  115   000036 43                 deca                          ;decrement one 
  116  116   000037 16xx xx            jsr SETADDR                   ;set address to new position 
  117  117   00003A CExx xx            ldx #BACKSPACE               ;
  118  118   00003D 16xx xx            jsr OUTSTRING                 ;output a black character 
  119  119   000040 16xx xx            jsr GETADDR                   ;get current position of LCR 
  120  120   000043 43                 deca                          ;decrement one 
  121  121   000044 16xx xx            jsr SETADDR
  122  122   000047 73xx xx            dec COUNT 
  123  123                            
  124  124                            
  125  125                                  
  126  126   00004A 20CB              bra buffer_loop 
  127  127                       
  128  128                             

Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
  129  129                            
  130  130   00004C 20FE         spin: bra spin; 
  131  131                       
  132  132                      
  133  133                      ;/------------------------------------------------------------------------------------\
  134  134                      ;| Subroutines                                                                        |
  135  135                      ;\------------------------------------------------------------------------------------/
  136  136                      ; General purpose subroutines go here
  137  137                      
  138  138                      
  139  139                      ;/------------------------------------------------------------------------------------\
  140  140                      ;| ASCII Messages and Constant Data                                                   |
  141  141                      ;\------------------------------------------------------------------------------------/
  142  142                      ; Any constants can be defined here
  143  143                      
  144  144   00004E 706C 6561    MESSAGE: DC.B  'please enter a number: ', $00
             000052 7365 2065  
             000056 6E74 6572  
             00005A 2061 206E  
             00005E 756D 6265  
             000062 723A 2000  
  145  145   000066 7468 6174    RESPONSE: DC.B 'that was a great choice' , $00
             00006A 2077 6173  
             00006E 2061 2067  
             000072 7265 6174  
             000076 2063 686F  
             00007A 6963 6500  
  146  146   00007E 2000         BACKSPACE: DC.B ' ' , $00 
  147  147                       
  148  148                      ;/------------------------------------------------------------------------------------\
  149  149                      ;| Vectors                                                                            |
  150  150                      ;\------------------------------------------------------------------------------------/
  151  151                      ; Add interrupt and reset vectors here
  152  152                      
  153  153                              ORG   $FFFE                    ; reset vector address
  154  154  a00FFFE xxxx                DC.W  Entry
  155  155                      
