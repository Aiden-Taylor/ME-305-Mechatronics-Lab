
Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
    1    1                      ;/-------------------------------------------------------------------------------------------------\                                
    2    2                      ;| Encoder Subroutines                                                                             |
    3    3                      ;|-------------------------------------------------------------------------------------------------|
    4    4                      ;| HARDWARE DESCRIPTION                                                                            |
    5    5                      ;| Manufacturer:     LSI Computer Systems, Inc.                                                    |
    6    6                      ;| Model Number:     LS7366R                                                                       |
    7    7                      ;| Summary:          LS7366R is a 32-bit CMOS counter, with direct interface for quadrature        |
    8    8                      ;|                   clocks from incremental encoders. For communications with microprocessors     |
    9    9                      ;|                   or microcontrollers, it provides a 4-wire SPI/MICROWIRE bus.                  |
   10   10                      ;| Pins Used:        PE4 (ECLK)                                                                    |
   11   11                      ;|                   PS4 (MISO)                                                                    |
   12   12                      ;|                   PS5 (MOSI)                                                                    |
   13   13                      ;|                   PS6 (SCK)                                                                     |
   14   14                      ;|                   PT6 (CS)                                                                      |
   15   15                      ;|                                                                                                 |
   16   16                      ;| SUBROUTINE DESCRIPTION                                                                          | 
   17   17                      ;| STARTUP_ENCODER:  Initializes the encoder counter and configures the chip for for continous     |  
   18   18                      ;|                   counting in 4x quadrature mode.                                               |
   19   19                      ;| READ_ENCODER:     Reads the current value from the encoder counter and returns it in D          |
   20   20                      ;|                                                                                                 |  
   21   21                      ;\-------------------------------------------------------------------------------------------------/ 
   22   22                      ;
   23   23                                  INCLUDE 'derivative.inc'     
16689   24                                  XDEF  STARTUP_ENCODER, READ_ENCODER, DISABLE_ENCODER
16690   25                      
16691   26                      Lib_Encoder:SECTION
16692   27                      
16693   28                             
16694   29                      ; Encoder Counter Equates
16695   30          0000 0260   ENCPort     EQU   PTH                                  ; Port which Encoder Counter is on
16696   31          0000 0262   ENCDDR      EQU   DDRH                                 ; Port which Encoder Counter is on
16697   32          0000 0001   mENCSS      EQU   mPTH_PTH0                            ; Pin for Encoder counter slave select
16698   33                      
16699   34                      
16700   35                      
16701   36                      STARTUP_ENCODER:
16702   37                                  ; Configure Mode Register 0 
16703   38   000000 1D02 6001               bclr  ENCPort,  #mENCSS;                  ; Set Port T pin 6 low
16704   39                                  
16705   40   000004 4FDB 20FC               brclr SPI0SR,   #mSPI0SR_SPTEF, *         ; Wait until the output buffer is clear 
16706   41   000008 180B 8800               movb  #%10001000,SPI0DR                   ; Write to Mode Register 0 Command   
             00000C DD         
16707   42                      ;                   \/\ /\ /
16708   43                      ;                    | |  | 
16709   44                      ;                    | |   \___________________________ Don't Care 
16710   45                      ;                    |  \______________________________ B5:B4:B3=001 (select MDR0)
16711   46                      ;                     \________________________________ B7:B6=10 (Write register)
16712   47                      ;                       
16713   48   00000D 4FDB 80FC               brclr SPI0SR,   #mSPI0SR_SPIF, *          ; Wait until the output buffer is clear 
16714   49                                                                                                                  
16715   50   000011 F700 DD                 tst   SPI0DR                              ; Read SPI Data register to clear SPIF                                        
16716   51                                                                                                                     
16717   52   000014 4FDB 20FC               brclr SPI0SR,   #mSPI0SR_SPTEF, *         ; Wait until the output buffer is clear
16718   53   000018 180B C300               movb  #%11000011,SPI0DR                   ; Write to Mode Register 0 Command   
             00001C DD         
16719   54                      ;                   ||\/\/\/       
16720   55                      ;                   || | | |
16721   56                      ;                   || | |  \__________________________ B1:B0=11 (x4 Quadrature Count)
16722   57                      ;                   || |  \____________________________ B3:B2=00 (Free Run) 
16723   58                      ;                   ||  \______________________________ B5:B4=10 (Reset CNTR)
16724   59                      ;                   | \________________________________ B6=1 (Synchronous Index)
16725   60                      ;                    \_________________________________ B7=1 (Filter Divisor=2)   
16726   61   00001D 4FDB 80FC               brclr SPI0SR,   #mSPI0SR_SPIF, *          ; Wait until the output buffer is clear  
16727   62                                                                                                                  

Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
16728   63   000021 F700 DD                 tst   SPI0DR                              ; Read SPI Data register to clear SPIF
16729   64                                  
16730   65   000024 1C02 6001               bset  ENCPort,  #mENCSS;                  ; Set Port T pin 6 high 
16731   66                                  
16732   67                                  ; Configure Mode Register 1 
16733   68   000028 1D02 6001               bclr  ENCPort,  #mENCSS;                  ; Set Port T pin 6 low
16734   69                                  
16735   70   00002C 4FDB 20FC               brclr SPI0SR,   #mSPI0SR_SPTEF, *         ; Wait until the output buffer is clear 
16736   71   000030 180B 9000               movb  #%10010000,SPI0DR                   ; Write to Mode Register 0 Command   
             000034 DD         
16737   72                      ;                   \/\ /\ /
16738   73                      ;                    | |  | 
16739   74                      ;                    | |   \__________________________ Don't Care 
16740   75                      ;                    |  \_____________________________ B5:B4:B3=010 (select MDR1)
16741   76                      ;                     \_______________________________ B7:B6=10 (Write register)
16742   77                      ;                       
16743   78   000035 4FDB 80FC               brclr SPI0SR,   #mSPI0SR_SPIF, *          ; Wait until the output buffer is clear 
16744   79                                                                                                                  
16745   80   000039 F700 DD                 tst   SPI0DR                              ; Read SPI Data register to clear SPIF                                        
16746   81                                                                                                                     
16747   82   00003C 4FDB 20FC               brclr SPI0SR,   #mSPI0SR_SPTEF, *         ; Wait until the output buffer is clear
16748   83   000040 180B 0200               movb  #%00000010,SPI0DR                   ; Write to Mode Register 0 Command   
             000044 DD         
16749   84                      ;                   ||||||\/
16750   85                      ;                   |||||| |
16751   86                      ;                   ||||||  \__________________________ B1:B0=10 (2 Byte Counter Mode)
16752   87                      ;                   ||||| \____________________________ B2=0 (Enable Counting
16753   88                      ;                   |||| \_____________________________ B3=0 (Unused
16754   89                      ;                   ||| \______________________________ B4=0 (NOP) 
16755   90                      ;                   || \_______________________________ B5=0 (NOP)
16756   91                      ;                   | \________________________________ B6=0 (NOP)
16757   92                      ;                    \_________________________________ B7=0 (NOP)
16758   93                        
16759   94   000045 4FDB 80FC               brclr SPI0SR,   #mSPI0SR_SPIF, *          ; Wait until the output buffer is clear  
16760   95                                                                                                                  
16761   96   000049 F700 DD                 tst   SPI0DR                              ; Read SPI Data register to clear SPIF
16762   97                                  
16763   98   00004C 1C02 6001               bset  ENCPort,  #mENCSS;                  ; Set Port T pin 6 high
16764   99   000050 3D                      rts
16765  100                      ;------------------------------------------------------------------------------------------------------
16766  101                      READ_ENCODER:            
16767  102   000051 1D02 6001               bclr  ENCPort,  #mENCSS;                  ; Set Port T pin 6 low
16768  103                                  
16769  104                                  ; Send Read Command and get first byte
16770  105   000055 4FDB 20FC               brclr SPI0SR,   #mSPI0SR_SPTEF, *         ; Wait until the output buffer is clear 
16771  106   000059 180B 6000               movb  #%01100000,SPI0DR                   ; Send a 1 if able   
             00005D DD         
16772  107                      ;                   \/\ /\ /
16773  108                      ;                    | |  | 
16774  109                      ;                    | |   \___________________________ Don't Care 
16775  110                      ;                    |  \______________________________ B5:B4:B3=100 (select CNTR)
16776  111                      ;                     \________________________________ B7:B6=01 (Read register)
16777  112   00005E 4FDB 80FC               brclr SPI0SR,   #mSPI0SR_SPIF, *          ; Wait until the input buffer is full                                         
16778  113   000062 F700 DD                 tst   SPI0DR                              ; Read SPI Data register to clear SPIF                              ;
16779  114                                  
16780  115                                  ; Send dummy byte to read first byte
16781  116   000065 4FDB 20FC               brclr SPI0SR,   #mSPI0SR_SPTEF, *         ; Wait until the output buffer is clear 
16782  117   000069 180B 0000               movb  #%00000000, SPI0DR                  ; Send a 0 to get bit to read                    
             00006D DD         
16783  118   00006E 4FDB 80FC               brclr SPI0SR,   #mSPI0SR_SPIF, *          ; Wait until the input buffer is full 
16784  119                                  ; Read BYTE 1                          
16785  120   000072 96DD                    ldaa  SPI0DR                              ; Read SPI Data register and store in A                                       
16786  121                                  
16787  122                                  ; Send dummy byte to read next byte

Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
16788  123   000074 4FDB 20FC               brclr SPI0SR,   #mSPI0SR_SPTEF, *         ; Wait until the output buffer is clear 
16789  124   000078 180B 0000               movb  #%00000000, SPI0DR                  ; Send a 0 to get bit to read                    
             00007C DD         
16790  125   00007D 4FDB 80FC               brclr SPI0SR,   #mSPI0SR_SPIF, *          ; Wait until the input buffer is full 
16791  126                                  ; Read BYTE 2
16792  127   000081 D6DD                    ldab  SPI0DR                              ; Read SPI Data register and store in B                                       
16793  128                                  
16794  129                                  
16795  130   000083 1C02 6001               bset  ENCPort,  #mENCSS;                  ; Set Port T pin 7 high 
16796  131   000087 3D                      rts                                                    
16797  132                      ;------------------------------------------------------------------------------------------------------
16798  133                      DISABLE_ENCODER:            
16799  134                                  ; Configure Mode Register 1 
16800  135   000088 1D02 6001               bclr  ENCPort,  #mENCSS;                  ; Set Port T pin 6 low
16801  136                                  
16802  137   00008C 4FDB 20FC               brclr SPI0SR,   #mSPI0SR_SPTEF, *         ; Wait until the output buffer is clear 
16803  138   000090 180B 9000               movb  #%10010000,SPI0DR                   ; Write to Mode Register 0 Command   
             000094 DD         
16804  139                      ;                   \/\ /\ /
16805  140                      ;                    | |  | 
16806  141                      ;                    | |   \__________________________ Don't Care 
16807  142                      ;                    |  \_____________________________ B5:B4:B3=010 (select MDR1)
16808  143                      ;                     \_______________________________ B7:B6=10 (Write register)
16809  144                      ;                       
16810  145   000095 4FDB 80FC               brclr SPI0SR,   #mSPI0SR_SPIF, *          ; Wait until the output buffer is clear 
16811  146                                                                                                                  
16812  147   000099 F700 DD                 tst   SPI0DR                              ; Read SPI Data register to clear SPIF                                        
16813  148                                                                                                                     
16814  149   00009C 4FDB 20FC               brclr SPI0SR,   #mSPI0SR_SPTEF, *         ; Wait until the output buffer is clear
16815  150   0000A0 180B 0600               movb  #%00000110,SPI0DR                   ; Write to Mode Register 0 Command   
             0000A4 DD         
16816  151                      ;                   ||||||\/
16817  152                      ;                   |||||| |
16818  153                      ;                   ||||||  \__________________________ B1:B0=10 (2 Byte Counter Mode)
16819  154                      ;                   ||||| \____________________________ B2=1 (Disable Counting)
16820  155                      ;                   |||| \_____________________________ B3=0 (Unused
16821  156                      ;                   ||| \______________________________ B4=0 (NOP) 
16822  157                      ;                   || \_______________________________ B5=0 (NOP)
16823  158                      ;                   | \________________________________ B6=0 (NOP)
16824  159                      ;                    \_________________________________ B7=0 (NOP)
16825  160                        
16826  161   0000A5 4FDB 80FC               brclr SPI0SR,   #mSPI0SR_SPIF, *          ; Wait until the output buffer is clear  
16827  162                                                                                                                  
16828  163   0000A9 F700 DD                 tst   SPI0DR                              ; Read SPI Data register to clear SPIF
16829  164                                  
16830  165   0000AC 1C02 6001               bset  ENCPort,  #mENCSS;                  ; Set Port T pin 6 high
16831  166   0000B0 3D                      rts                                                               
