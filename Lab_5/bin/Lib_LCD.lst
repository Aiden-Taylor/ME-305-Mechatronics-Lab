
Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
    1    1                      ;***************************************************************************************************           
    2    2                      ;* ME 305 Library V2.0                                                                             * 
    3    3                      ;*************************************************************************************************** 
    4    4                      ;* Summary:                                                                                        *
    5    5                      ;*  The following is a summary of the I/O functionality provided in the ME 305 library. These      *
    6    6                      ;*  commands are in the form of subroutines that have been placed in the Libraries folder of the   *
    7    7                      ;*  Codewarrior Project provided during Lab 1.                                                     *
    8    8                      ;*  IMPORTANT NOTE: Many of the MCU pins are in connected to hardware and should not be used.      *
    9    9                      ;*  +	Bits 4 - 6 of PORT M and all of PORT B are used for communication with the LCD module.       *
   10   10                      ;*  +	Bit 7 of PORT J, and bits 0 - 5 of PORT K are used for communication with the keypad.        *
   11   11                      ;*  +	Bits 1 and 2 of PORT H are used for SPI communication with the encoder counter and DAC       *
   12   12                      ;*  +	Bits 4 - 7 of PORT A and AN10 are used with the motor driver.                                *
   13   13                      ;*  None of these pins should be used for anything besides interacting with the associated         *
   14   14                      ;*  hardware described above.                                                                      *
   15   15                      ;*                                                                                                 *
   16   16                      ;* Author: Charlie Refvem                                                                          *
   17   17                      ;*  Cal Poly University                                                                            *
   18   18                      ;*  Jan 2015                                                                                       *
   19   19                      ;*                                                                                                 *
   20   20                      ;* Revision History:                                                                               *
   21   21                      ;*  CTR 05/26/16                                                                                   * 
   22   22                      ;*   - Updated comment scheme                                                                      * 
   23   23                      ;*   - Added outstring_at and outchar_at                                                           * 
   24   24                      ;*  WRM 09/02/16                                                                                   * 
   25   25                      ;*   - Renamed CLEARSCREEN to CLRSCREEN and renamed LOADADDR to GETADDR                            * 
   26   26                      ;*   - Reversed order of KP & KI in LCDTEMPLATE_L2                                                 * 
   27   27                      ;*   - Assorted argument changes to increase compatiblity with the with pre-2016 library           * 
   28   28                      ;*  WRM 09/15/16                                                                                   * 
   29   29                      ;*   - Changed GETADDR to agree with pre-2016 library.  This change was overlooked in prior patch. * 
   30   30                      ;*   - Verified ME 305 Library V1.0 works correctly with Lab 3.                                    * 
   31   31                      ;*  WRM 10/03/16                                                                                   * 
   32   32                      ;*   - Cleared up bit vs. pin useage in the summary.                                               * 
   33   33                      ;*   - Reworked BACKSPACE.                                                                         * 
   34   34                      ;*   - Changed psha and pshb to pshd in several places; same for corresponding pulls               * 
   35   35                      ;*   - Revised Lab 5 display screen to make additional space to display operating state            * 
   36   36                      ;*   - Changed LEFRT to LEFF to better agree with revised Lab 5 display routines                   * 
   37   37                      ;*   - Named this version V1.1                                                                     *
   38   38                      ;*  CTR 01/07/17                                                                                   *
   39   39                      ;*   - Moved library variables to their own section in RAM                                         * 
   40   40                      ;*   - Renamed to V1.2                                                                             * 
   41   41                      ;*  CTR/WRM 01/08/17                                                                               *
   42   42                      ;*   - Fixed bug regarding periodic memory update (100 ms is too fast)                             *
   43   43                      ;*   - Renamed to V2.0                                                                             *
   44   44                      ;*  CTR/WRM 01/05/19                                                                               *
   45   45                      ;*   - Changed PWM period to 625, corresponding to PWM at 16.0kHz                                  *
   46   46                      ;*   - Renamed to V2.1                                                                             *
   47   47                      ;*  CTR/WRM 03/09/2020                                                                             *
   48   48                      ;*   - Changed PWM period to 650, corresponding to PWM at 15.385kHz                                *
   49   49                      ;*   - Renamed to V2.2                                                                             *
   50   50                      ;*  ToDo:                                                                                          *
   51   51                      ;*   - Revisit CURSOR_OFF                                                                          *
   52   52                      ;*   - Separate DISP and CURSOR functions                                                          *
   53   53                      ;***************************************************************************************************
   54   54                      
   55   55                      ;/-------------------------------------------------------------------------------------------------\  
   56   56                      ;| Include all associated files                                                                    |
   57   57                      ;\-------------------------------------------------------------------------------------------------/
   58   58                      ; The following are external files to be included during assembly          
   59   59                       
   60   60                                  INCLUDE 'derivative.inc'         
16726   61                      
16727   62                      ;/-------------------------------------------------------------------------------------------------\  
16728   63                      ;| External Definitions                                                                            |
16729   64                      ;\-------------------------------------------------------------------------------------------------/

Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
16730   65                      ; All labels that are referenced by the linker need an external definition (even main)
16731   66                       
16732   67                                  XDEF  INITLCD, SETADDR, GETADDR, CLRSCREEN, CURSOR_ON, CURSOR_OFF, DISP_OFF
16733   68                                  XDEF  OUTCHAR, OUTCHAR_AT, OUTSTRING, OUTSTRING_AT
16734   69                                  XDEF  LCDTEMPLATE, UPDATELCD_L1, UPDATELCD_L2
16735   70                                  XDEF  LVREF_BUF, LVACT_BUF, LERR_BUF,LEFF_BUF, LKP_BUF, LKI_BUF
16736   71                                  
16737   72                      ;/-------------------------------------------------------------------------------------------------\  
16738   73                      ;| External References                                                                             |
16739   74                      ;\-------------------------------------------------------------------------------------------------/    
16740   75                      ; All labels from other files must have an external reference             
16741   76                                          
16742   77                                  XREF  DELAY_MICRO, DELAY_MILLI
16743   78                      
16744   79                                    
16745   80                      ;/-------------------------------------------------------------------------------------------------\  
16746   81                      ;| Assembler Equates                                                                               |
16747   82                      ;\-------------------------------------------------------------------------------------------------/	
16748   83                      ; Constant values can be equated here
16749   84                      
16750   85          0000 0001   LCD_DATA      EQU PORTB
16751   86          0000 0003   LCD_DATA_DIR  EQU DDRB
16752   87          0000 0250   LCD_CTRL      EQU PTM
16753   88          0000 0252   LCD_CTRL_DIR  EQU DDRM
16754   89          0000 0040   E             EQU mPTM_PTM6                               ; Enable Line
16755   90          0000 0020   RW            EQU mPTM_PTM5                               ; Read Write
16756   91          0000 0010   RS            EQU mPTM_PTM4                               ; Register Select
16757   92          0000 0070   Adr_mask      EQU E|RW|RS                                 ; LCD CTRL bits (E|RW|RS)
16758   93          0000 0004   LVREF_LENGTH  EQU 4
16759   94          0000 0004   LVACT_LENGTH  EQU 4
16760   95          0000 0004   LERR_LENGTH   EQU 4
16761   96          0000 0004   LEFF_LENGTH   EQU 4
16762   97          0000 0005   LKI_LENGTH    EQU 5
16763   98          0000 0005   LKP_LENGTH    EQU 5            
16764   99                                    
16765  100                      ;/-------------------------------------------------------------------------------------------------\  
16766  101                      ;| Variables in RAM                                                                                |
16767  102                      ;\-------------------------------------------------------------------------------------------------/
16768  103                      ; The following variables are located in unpaged ram
16769  104                      
16770  105                      LIBRARY_RAM: SECTION
16771  106                                                                                                                     
16772  107   000000             LVREF_BUF  DS.B  LVREF_LENGTH                             ; Vref Buffer
16773  108   000004             LVREF_NULL DS.B  1                           
16774  109   000005             LVACT_BUF  DS.B  LVACT_LENGTH                             ; Vact Buffer 
16775  110   000009             LVACT_NULL DS.B  1                           
16776  111   00000A             LERR_BUF   DS.B  LERR_LENGTH                              ; Error Buffer     
16777  112   00000E             LERR_NULL  DS.B  1                           
16778  113   00000F             LEFF_BUF   DS.B  LEFF_LENGTH                              ; Effort Buffer   
16779  114   000013             LEFF_NULL  DS.B  1                           
16780  115   000014             LKP_BUF    DS.B  LKP_LENGTH                               ; Kp Buffer     
16781  116   000019             LKP_NULL   DS.B  1                           
16782  117   00001A             LKI_BUF    DS.B  LKI_LENGTH                               ; Ki Buffer                                                               
16783  118   00001F             LKI_NULL   DS.B  1                           
16784  119                      
16785  120                      ;/-------------------------------------------------------------------------------------------------\  
16786  121                      ;|  Main Routines                                                                                  |
16787  122                      ;\-------------------------------------------------------------------------------------------------/
16788  123                      
16789  124                      Lib_LCD       SECTION
16790  125                      
16791  126                      ;-----------INITLCD---------------------------------------------------------------------------------
16792  127                      ; Initializes the LCD to a blank screen with the cursor turned off after showing a splash screen for
16793  128                      ; 3 seconds. 

Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
16794  129                      ; Example:
16795  130                      ;		        jsr	  INITLCD		                              ; Initializes LCD screen
16796  131                      
16797  132                      INITLCD:
16798  133   000000 35                      pshy                                          ; Save registers on stack
16799  134   000001 34                      pshx
16800  135   000002 3B                      pshd                                          
16801  136                                  
16802  137                      ; Initialize Variables
16803  138   000003 79xx xx                 clr   LVREF_BUF+LVREF_LENGTH;                 ; Clear last byte of each buffer to act as
16804  139   000006 79xx xx                 clr   LVACT_BUF+LVACT_LENGTH                  ; an ASCII stop
16805  140   000009 79xx xx                 clr   LERR_BUF +LERR_LENGTH
16806  141   00000C 79xx xx                 clr   LEFF_BUF+LEFF_LENGTH
16807  142   00000F 79xx xx                 clr   LKI_BUF  +LKI_LENGTH
16808  143   000012 79xx xx                 clr   LKP_BUF  +LKP_LENGTH
16809  144                                  
16810  145                      ; Initialize Ports                                                                           
16811  146   000015 4C03 FF                 bset  LCD_DATA_DIR,#$FF                       ; LCD_DATA output
16812  147   000018 1C02 5270               bset  LCD_CTRL_DIR,#Adr_mask                  ; LCD_CTRL output
16813  148   00001C 4D01 FF                 bclr  LCD_DATA,#$FF                           ; clear LCD_DATA   
16814  149   00001F 1D02 5070               bclr  LCD_CTRL,#Adr_mask                      ; clear LCD_CTRL
16815  150                      
16816  151                      ; Reset Display
16817  152                                  ; Reset Command #1   
16818  153   000023 16xx xx                 jsr   LCD_RESET                               ; send reset command
16819  154   000026 CE00 02                 ldx   #2                                      ; set delay time
16820  155   000029 16xx xx                 jsr   DELAY_MICRO                             ; sub for delay
16821  156                                  
16822  157                                  ; Reset Command #2
16823  158   00002C 16xx xx                 jsr   LCD_RESET                               ; send reset command         
16824  159   00002F CE00 02                 ldx   #2                                      ; set delay time
16825  160   000032 16xx xx                 jsr   DELAY_MICRO                             ; sub for delay
16826  161                      
16827  162                                  ; Reset Command #3
16828  163   000035 16xx xx                 jsr   LCD_RESET                               ; send reset command          
16829  164   000038 CE00 02                 ldx   #2                                      ; set delay time
16830  165   00003B 16xx xx                 jsr   DELAY_MICRO                             ; sub for delay
16831  166                                  
16832  167                                  ;Function Set Command: 8 bit bus, 2 rows, 5x7 dots  
16833  168   00003E C638                    ldab  #$38                                    ; function set command
16834  169   000040 16xx xx                 jsr   LCD_WRITE                               ; write data to LCD      
16835  170                      
16836  171                      
16837  172                      ; Configure Display
16838  173   000043 16xx xx                 jsr   DISP_OFF                                ; Display off      
16839  174   000046 16xx xx                 jsr   CLRSCREEN                               ; Clear Display   
16840  175   000049 16xx xx                 jsr   DISP_ON                                 ; Display on
16841  176                                  
16842  177                      ; Splash top Display  
16843  178   00004C 8600                    ldaa  #$00                                    ; Address of top left corner
16844  179   00004E 16xx xx                 jsr   SETADDR                                 
16845  180   000051 CExx xx                 ldx   #INITMESS_L1                            ; Top splash message
16846  181   000054 16xx xx                 jsr   OUTSTRING                               ; Display on screen
16847  182                                  
16848  183                      ; Splash bottom display                                   
16849  184   000057 8640                    ldaa  #$40                                    ; Address of bottom left corner
16850  185   000059 16xx xx                 jsr   SETADDR                                 
16851  186   00005C CExx xx                 ldx   #INITMESS_L2                            ; Bottom splash message
16852  187   00005F 16xx xx                 jsr   OUTSTRING                               ; Display on screen
16853  188                                                              
16854  189                      ; Delay 3 seconds
16855  190   000062 CE0B B8                 ldx   #3000                                   ; Hold the screen for 3 seconds
16856  191   000065 16xx xx                 jsr   DELAY_MILLI                                           
16857  192                                                    

Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
16858  193                      ; Send Clear Display     
16859  194   000068 16xx xx                 jsr   CLRSCREEN                               ; Blank out the screen
16860  195                                  
16861  196   00006B 3A                      puld
16862  197   00006C 30                      pulx
16863  198   00006D 31                      puly
16864  199   00006E 3D                      rts                                           ; Return From Subroutine
16865  200                        
16866  201                      ;-----------LCD_RESET-------------------------------------------------------------------------------
16867  202                      ; Routine sends LCD reset command. Used internally
16868  203                      
16869  204                      LCD_RESET:                               
16870  205   00006F 37                      pshb
16871  206                                  ; Step 0 Set DDR
16872  207   000070 4C03 FF                 bset  LCD_DATA_DIR, #$FF                      ; Set LCD DDR to output
16873  208                                  ; Step 1 set control bits                                      
16874  209   000073 1D02 5070               bclr  LCD_CTRL,#Adr_mask                               
16875  210   000077 A7                      nop
16876  211                                  ; Step 2 set enable bit
16877  212   000078 1C02 5040               bset  LCD_CTRL, #E                            ; raise enable bit  
16878  213   00007C A7                      nop
16879  214                                  ; Step 3 send data
16880  215   00007D 180B 3000               movb  #$30, LCD_DATA                          ; send data
             000081 01         
16881  216                                  ; Step 4 clock in data                                                      
16882  217   000082 1D02 5040               bclr  LCD_CTRL,#E                             ; clock in data by lowering E
16883  218   000086 33                      pulb
16884  219                                  
16885  220   000087 3D                      rts
16886  221                      
16887  222                      ;-----------LCD_WRITE-------------------------------------------------------------------------------
16888  223                      ; Routine sends LCD Data
16889  224                      ; Assumes acc B contains data to write
16890  225                      
16891  226                      LCD_WRITE:                                
16892  227   000088 34                      pshx
16893  228   000089 3B                      pshd
16894  229                                  ; Step 0 Set DDR
16895  230   00008A 4C03 FF                 bset  LCD_DATA_DIR, #$FF                      ; Set LCD DDR to output
16896  231                                  ; Step 1 set control bits
16897  232   00008D 1D02 5020               bclr  LCD_CTRL,#RW
16898  233   000091 A7                      nop
16899  234                                  ; Step 2 set enable bit
16900  235   000092 1C02 5040               bset  LCD_CTRL,#E                             ; raise enable bit   
16901  236   000096 A7                      nop
16902  237   000097 A7                      nop
16903  238                                  ; Step 3 send data
16904  239   000098 5B01                    stab  LCD_DATA                                ; send data from ACCB       
16905  240   00009A A7                      nop
16906  241   00009B A7                      nop
16907  242                                  ; Step 4 clock in data                                                      
16908  243   00009C 1D02 5040               bclr  LCD_CTRL,#E                             ; clock in data by lowering E
16909  244                                  
16910  245                                  ; Check busy flag
16911  246                      BF_TEST:    
16912  247   0000A0 1D02 5010               bclr  LCD_CTRL,#RS
16913  248   0000A4 16xx xx                 jsr   LCD_READ
16914  249   0000A7 C480                    andb  #$80
16915  250   0000A9 26F5                    bne   BF_TEST
16916  251   0000AB CE00 01                 ldx   #1
16917  252   0000AE 16xx xx                 jsr   DELAY_MICRO 
16918  253   0000B1 3A                      puld
16919  254   0000B2 30                      pulx
16920  255   0000B3 3D                      rts

Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
16921  256                                  
16922  257                      ;-----------LCD_READ--------------------------------------------------------------------------------
16923  258                      ; Routine reads LCD Data
16924  259                      ; Loads acc B with data read      
16925  260                          
16926  261                      LCD_READ:                      
16927  262                                  ; Step 0 Set DDRs
16928  263   0000B4 4D03 FF                 bclr  LCD_DATA_DIR, #$FF                      ; Set LCD DDR to input
16929  264                                  ; Step 1 set control bits
16930  265   0000B7 1C02 5020               bset  LCD_CTRL,#RW                            ; Set Read Bit
16931  266   0000BB A7                      nop
16932  267                                  ; Step 2 set enable bit
16933  268   0000BC 1C02 5040               bset  LCD_CTRL,#E                             ; Set Enable Bit
16934  269   0000C0 A7                      nop
16935  270                                  ; Step 3 send data
16936  271   0000C1 D601                    ldab  LCD_DATA                                ; Read Data Into ACCB
16937  272                                  ; Step 4 clock in data
16938  273   0000C3 1D02 5040               bclr  LCD_CTRL,#E                             ; clock in data by lowering E    
16939  274                                  
16940  275   0000C7 3D                      rts
16941  276                                  
16942  277                      ;-----------DISP_OFF--------------------------------------------------------------------------------
16943  278                      ; Disables the LCD module without changing any of the text on the display.
16944  279                      ; Example:
16945  280                      ;		        jsr	DISP_OFF		                              ; Temporarily disable LCD screen
16946  281                      
16947  282                      DISP_OFF:
16948  283   0000C8 37                      pshb
16949  284   0000C9 C608                    ldab  #%00001000                               
16950  285                      ;                   \__/|||| 
16951  286                      ;                    |  ||| \_____________________________ B0=0 (Blink off)
16952  287                      ;                    |  || \______________________________ B1=0 (Cursor off)
16953  288                      ;                    |  | \_______________________________ B2=0 (Display off)
16954  289                      ;                    |   \________________________________ B3=1 (Indicates on/off command)
16955  290                      ;                     \___________________________________ B7:B4=0000
16956  291   0000CB 16xx xx                 jsr   LCD_WRITE                               ; write data to LCD
16957  292   0000CE 33                      pulb
16958  293                                  
16959  294   0000CF 3D                      rts
16960  295                                  
16961  296                      ;-----------DISP_ON---------------------------------------------------------------------------------     
16962  297                      ;Turns the display module back on with the cursor off.
16963  298                      ;Example:
16964  299                      ;		        jsr	  DISP_ON		                      ; Temporarily disable LCD screen
16965  300                      
16966  301                      DISP_ON:
16967  302                      ;Clear Display     
16968  303   0000D0 37                      pshb
16969  304   0000D1 C60C                    ldab  #%00001100                              
16970  305                      ;                   \_____/|
16971  306                      ;                      |    \_____________________________ B0=1
16972  307                      ;                       \_________________________________ B7:B1=0000000
16973  308   0000D3 16xx xx                 jsr   LCD_WRITE                               ;write data to LCD
16974  309   0000D6 33                      pulb
16975  310                                  
16976  311   0000D7 3D                      rts
16977  312                                  
16978  313                      ;-----------CURSOR_ON-------------------------------------------------------------------------------     
16979  314                      ; Enables the cursor on the LCD screen. If the display is off it will turn on when this command is
16980  315                      ; run. The subroutine is stack neutral and leaves all index registers and accumulators as is.
16981  316                      ;Example:
16982  317                      ;	        	jsr   CURSOR_ON		                            ; Enable LCD cursor
16983  318                                      
16984  319                      CURSOR_ON:     

Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
16985  320   0000D8 37                      pshb
16986  321   0000D9 C60E                    ldab  #%00001110                               
16987  322                      ;                   \__/|||| 
16988  323                      ;                    |  ||| \_____________________________ B0=0 (Blink off)
16989  324                      ;                    |  || \______________________________ B1=0 (Cursor off)
16990  325                      ;                    |  | \_______________________________ B2=1 (Display on)
16991  326                      ;                    |   \________________________________ B3=1 (Indicates on/off command)
16992  327                      ;                     \___________________________________ B7:B4=0000
16993  328   0000DB 16xx xx                 jsr   LCD_WRITE                               ;write data to LCD
16994  329   0000DE 33                      pulb
16995  330                                  
16996  331   0000DF 3D                      rts
16997  332                                  
16998  333                      ;-----------CURSOR_OFF------------------------------------------------------------------------------     
16999  334                      ; Disables the cursor on the LCD screen. If the display is off it will turn on when this command is
17000  335                      ; run. The subroutine is stack neutral and leaves all index registers and accumulators as is.
17001  336                      ;Example:
17002  337                      ;	        	jsr   CURSOR_OFF		                          ; Enable LCD cursor
17003  338                      
17004  339                      CURSOR_OFF: ; at this point in time, CURSOR_OFF has not been implemented.  This is a stub. 
17005  340                      
17006  341   0000E0 3D                      rts
17007  342                       
17008  343                      ;-----------SETADDR---------------------------------------------------------------------------------     
17009  344                      ; Sets the LCD address. Input arguments: acc A contains the value to which the LCD cursor address
17010  345                      ; will be set.  Outputs returned: none..
17011  346                      ; Example:
17012  347                      ;		        ldaa  #$40			           ; Load acc A with addr of Row 2 Col 1
17013  348                      ;           jsr	  SETADDR	             ; Set the LCD address
17014  349                      
17015  350                      
17016  351                      SETADDR:    
17017  352   0000E1 3B                      pshd     
17018  353   0000E2 8A80                    oraa  #%10000000
17019  354   0000E4 180E                    tab                       
17020  355   0000E6 1D02 5010               bclr  LCD_CTRL,#RS  
17021  356   0000EA 16xx xx                 jsr   LCD_WRITE
17022  357   0000ED 3A                      puld
17023  358                                  
17024  359   0000EE 3D                      rts
17025  360                                  
17026  361                      ;-----------GETADDR---------------------------------------------------------------------------------     
17027  362                      ; Returns the current LCD address. This is the location where the next character will be displayed.
17028  363                      ; If enabled, the cursor will move to this address. Outputs: the LCD address will be returned in 
17029  364                      ; Accumulator A.
17030  365                      ;           jsr 	GETADDR		           ; Gets the LCD address
17031  366                      ;           staa	cur_addr		         ; Store the returned value in memory
17032  367                                             
17033  368                      GETADDR:
17034  369   0000EF 37                      pshb
17035  370   0000F0 1D02 5010               bclr  LCD_CTRL,#RS
17036  371   0000F4 16xx xx                 jsr   LCD_READ             ; puts LCDaddr in acc B
17037  372   0000F7 180F                    tba                        ; moves LCDaddr to acc A
17038  373   0000F9 33                      pulb            
17039  374   0000FA 3D                      rts
17040  375                                  
17041  376                      ;-----------CLRSCREEN-------------------------------------------------------------------------------     
17042  377                                    
17043  378                      CLRSCREEN:
17044  379                      ;Clear Display     
17045  380   0000FB 37                      pshb
17046  381   0000FC C601                    ldab  #%00000001                              
17047  382                      ;                   \_____/|
17048  383                      ;                      |    \_____________________________ B0=1

Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
17049  384                      ;                       \_________________________________ B7:B1=0000000
17050  385   0000FE 16xx xx                 jsr   LCD_WRITE                               ;write data to LCD
17051  386   000101 33                      pulb
17052  387                                  
17053  388   000102 3D                      rts
17054  389                                  
17055  390                      
17056  391                      ;-----------BACKSPACE-------------------------------------------------------------------------------     
17057  392                      ; Backspace function. This is used internally and should not be called by the user.
17058  393                      
17059  394                      BACKSPACE:
17060  395   000103 3B                      pshd
17061  396   000104 16xx xx                 jsr   GETADDR  
17062  397   000107 43                      deca
17063  398   000108 36                      psha
17064  399   000109 16xx xx                 jsr   SETADDR
17065  400   00010C C620                    ldab  #$20  
17066  401   00010E 16xx xx                 jsr   OUTCHAR
17067  402   000111 32                      pula
17068  403   000112 16xx xx                 jsr   SETADDR
17069  404   000115 3A                      puld
17070  405                                  
17071  406   000116 3D                      rts
17072  407                                  
17073  408                      ;-----------OUTCHAR/OUTCHAR_AT----------------------------------------------------------------------     
17074  409                      ; OUTCHAR outputs a single character to the LCD screen at the present cursor location, and the 
17075  410                      ; cursor location is automatically advanced.  Input arguments:  ASCII value of character to be
17076  411                      ; displayed is in acc B.  Outputs returned: none.
17077  412                      ;
17078  413                      ; OUTCHAR_AT outputs a single character to the LCD screen at a specified location, and the cursor
17079  414                      ; location is automatically advanced.  Input arguments:  LCD address at which the character will
17080  415                      ; be displayed is in acc A, and the ASCII value of character to be displayed is in acc B.
17081  416                      ; Outputs returned: none.
17082  417                      ; Example_1:
17083  418                      ;		        ldab  #character		       ; Load acc B with character be displayed
17084  419                      ;           jsr   OUTCHAR		           ; Output the character to the screen
17085  420                      ; Example_2:
17086  421                      ;		        ldaa  #$LCDaddr		         ; LCD address range is $00 - $27 and $40 - $67
17087  422                      ;           ldab  #character		       ; character is in 8-Bit ASCII
17088  423                      ;           jsr   OUTCHAR_AT		       ; Output the character to the screen
17089  424                      
17090  425                      OUTCHAR_AT:
17091  426   000117 16xx xx                 jsr   SETADDR
17092  427                      
17093  428                      OUTCHAR:
17094  429                      ;Write one character to the screen   
17095  430   00011A C108                    cmpb  #$08
17096  431   00011C 2708                    beq   BS_HANDLE
17097  432   00011E 1C02 5010               bset  LCD_CTRL,#RS
17098  433   000122 16xx xx                 jsr   LCD_WRITE            ; write data to LCD  
17099  434                                  
17100  435   000125 3D                      rts                                                                             
17101  436                                  
17102  437                      BS_HANDLE:                             ; ensures that BS moves cursor back one
17103  438   000126 36                      psha
17104  439   000127 16xx xx                 jsr   GETADDR
17105  440   00012A 847F                    anda  #%01111111  
17106  441   00012C 43                      deca            
17107  442   00012D 16xx xx                 jsr   SETADDR
17108  443   000130 32                      pula
17109  444                                  
17110  445   000131 3D                      rts
17111  446                                  
17112  447                      ;-----------OUTSTRING/OUTSTRING_AT------------------------------------------------------------------    

Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
17113  448                      ; OUTSTRING outputs an entire string to the LCD screen beginning at the current cursor location.
17114  449                      ;.Input arguments: X contains the address of the first byte of the stored message to be displayed.
17115  450                      ; All messages must end with an end-of-string character (ASCII null OxOO).  Outputs returned: none.
17116  451                      ;
17117  452                      ; OUTSTRING_AT outputs an entire string to the LCD screen beginning at a specified location. Input
17118  453                      ; arguments:  LCD address at which the first character will be displayed is in acc A, and X contains
17119  454                      ; the address of the first byte of the stored message to be displayed.  All messages must end with
17120  455                      ; an end-of-string character (ASCII null OxOO).  Outputs returned: none.
17121  456                      ; Example_1:
17122  457                      ;		        ldx	  #MESSAGE		         ; Load index register X with address of message
17123  458                      ;           jsr 	OUTSTRING		         ; Output the message to the screen 
17124  459                      ; Example_2: 
17125  460                      ;		        ldaa	#$LCDaddr		         ; LCD address range is $00 - $27 and $40 - $67
17126  461                      ;           ldx	  #MESSAGE		         ; Load index register X with address of message
17127  462                      ;           jsr	  OUTSTRING_AT	       ; Output the message to the screen
17128  463                      ; If the message is known at assembly time, the string to be displayed can be generated and stored
17129  464                      ; in memory using assembler directive DC.B (define constant byte). An ACSII null character must be
17130  465                      ; appended to the end of the given string. Proper use of this is shown below.
17131  466                      ;MESSAGE: 	DC.B  'Hello World!',$00
17132  467                      
17133  468                      OUTSTRING_AT:
17134  469   000132 16xx xx                 jsr   SETADDR
17135  470                      
17136  471                      OUTSTRING:
17137  472                      ; Write a string of characters to the screen       
17138  473   000135 34                      pshx
17139  474   000136 37                      pshb
17140  475                      OUTLOOP:
17141  476   000137 E630                    ldab  1,x+
17142  477   000139 2705                    beq   OUTEXIT
17143  478   00013B 16xx xx                 jsr   OUTCHAR
17144  479   00013E 20F7                    bra   OUTLOOP 
17145  480                      OUTEXIT:    
17146  481   000140 33                      pulb
17147  482   000141 30                      pulx
17148  483   000142 3D                      rts
17149  484                                  
17150  485                      ;-----------LCDTEMPLATE-----------------------------------------------------------------------------     
17151  486                      
17152  487                      
17153  488                      LCDTEMPLATE:
17154  489   000143 34                      pshx
17155  490   000144 36                      psha
17156  491                      ; Clear display    
17157  492   000145 16xx xx                 jsr   CLRSCREEN                            
17158  493                      
17159  494                      ; Display top line 
17160  495   000148 8600                    ldaa  #$00  
17161  496   00014A 16xx xx                 jsr   SETADDR
17162  497   00014D CExx xx                 ldx   #LCDTEMPLATE_L1
17163  498   000150 16xx xx                 jsr   OUTSTRING
17164  499                                  
17165  500                      ; Display bottom line
17166  501   000153 8640                    ldaa  #$40
17167  502   000155 16xx xx                 jsr   SETADDR
17168  503   000158 CExx xx                 ldx   #LCDTEMPLATE_L2
17169  504   00015B 16xx xx                 jsr   OUTSTRING
17170  505                      
17171  506   00015E 32                      pula
17172  507   00015F 30                      pulx
17173  508   000160 3D                      rts
17174  509                                  
17175  510                      ;-----------UPDATELCD_L1----------------------------------------------------------------------------     
17176  511                      

Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
17177  512                      UPDATELCD_L1:   
17178  513   000161 34                      pshx
17179  514   000162 36                      psha
17180  515                      ; Update V_ref
17181  516   000163 8606                    ldaa  #$00+06                                 ; Top row, sixth column
17182  517   000165 16xx xx                 jsr   SETADDR
17183  518   000168 CExx xx                 ldx   #LVREF_BUF
17184  519   00016B 16xx xx                 jsr   OUTSTRING
17185  520                      ; Update V_act
17186  521   00016E 8611                    ldaa  #$00+17                                 ; Top row, seventeenth column
17187  522   000170 16xx xx                 jsr   SETADDR
17188  523   000173 CExx xx                 ldx   #LVACT_BUF
17189  524   000176 16xx xx                 jsr   OUTSTRING
17190  525                      ; Update Err
17191  526   000179 861A                    ldaa  #$00+26                                 ; Top row, twenty-sixth column
17192  527   00017B 16xx xx                 jsr   SETADDR
17193  528   00017E CExx xx                 ldx   #LERR_BUF
17194  529   000181 16xx xx                 jsr   OUTSTRING   
17195  530                      ; Update Eff
17196  531   000184 8623                    ldaa  #$00+35                                 ; Top row, thirty-fifth column
17197  532   000186 16xx xx                 jsr   SETADDR
17198  533   000189 CExx xx                 ldx   #LEFF_BUF
17199  534   00018C 16xx xx                 jsr   OUTSTRING
17200  535                      
17201  536   00018F 32                      pula
17202  537   000190 30                      pulx
17203  538   000191 3D                      rts
17204  539                                  
17205  540                      ;-----------UPDATELCD_L2----------------------------------------------------------------------------     
17206  541                      
17207  542                      UPDATELCD_L2:     
17208  543   000192 34                      pshx
17209  544   000193 36                      psha
17210  545                      ; Update 1024*KP
17211  546   000194 8648                    ldaa  #$40+08                                 ; Top row, eighth column
17212  547   000196 16xx xx                 jsr   SETADDR
17213  548   000199 CExx xx                 ldx   #LKP_BUF
17214  549   00019C 16xx xx                 jsr   OUTSTRING
17215  550                      ; Update 1024*KI
17216  551   00019F 8656                    ldaa  #$40+22                                 ; Top row, twenty-second column
17217  552   0001A1 16xx xx                 jsr   SETADDR
17218  553   0001A4 CExx xx                 ldx   #LKI_BUF
17219  554   0001A7 16xx xx                 jsr   OUTSTRING
17220  555                      
17221  556   0001AA 32                      pula
17222  557   0001AB 30                      pulx
17223  558   0001AC 3D                      rts
17224  559                      
17225  560                      ;/-------------------------------------------------------------------------------------------------\  
17226  561                      ;|  LCLD Messages                                                                                  |
17227  562                      ;\-------------------------------------------------------------------------------------------------/
17228  563                      
17229  564   0001AD 4D45 2033   INITMESS_L1:    DC.B 'ME 305 Benchtop Unit with Library V3.0',$00
             0001B1 3035 2042  
             0001B5 656E 6368  
             0001B9 746F 7020  
             0001BD 556E 6974  
             0001C1 2077 6974  
             0001C5 6820 4C69  
             0001C9 6272 6172  
             0001CD 7920 5633  
             0001D1 2E30 00    
17230  565   0001D4 4279 3A20   INITMESS_L2:    DC.B 'By: C. Refvem, W. Murray, E. Wade, 2023',$00
             0001D8 432E 2052  

Freescale HC12-Assembler 
(c) Copyright Freescale 1987-2010

 Abs. Rel.   Loc    Obj. code   Source line
 ---- ----   ------ ---------   -----------
             0001DC 6566 7665  
             0001E0 6D2C 2057  
             0001E4 2E20 4D75  
             0001E8 7272 6179  
             0001EC 2C20 452E  
             0001F0 2057 6164  
             0001F4 652C 2032  
             0001F8 3032 3300  
17231  566   0001FC 565F 7265   LCDTEMPLATE_L1: DC.B 'V_ref=     V_act=     Err=     Eff=    %',$00
             000200 663D 2020  
             000204 2020 2056  
             000208 5F61 6374  
             00020C 3D20 2020  
             000210 2020 4572  
             000214 723D 2020  
             000218 2020 2045  
             00021C 6666 3D20  
             000220 2020 2025  
             000224 00         
17232  567   000225 3130 3234   LCDTEMPLATE_L2: DC.B '1024*KP=      1024*KI=      ',$00
             000229 2A4B 503D  
             00022D 2020 2020  
             000231 2020 3130  
             000235 3234 2A4B  
             000239 493D 2020  
             00023D 2020 2020  
             000241 00         
